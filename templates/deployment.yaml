apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hybrid-ingestion-agent.fullname" . }}
  labels:
    {{- include "hybrid-ingestion-agent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "hybrid-ingestion-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hybrid-ingestion-agent.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hybrid-ingestion-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: app
              containerPort: 8585
              protocol: TCP
          env:
            - name: AGENT_ID
              value: "{{ .Values.config.agentId }}"
            - name: PIPELINE_SERVICE_CLIENT_ENDPOINT
              value: "{{ .Values.config.pipelineServiceClientEndpoint }}"
            - name: ARGO_TOKEN
              value: "{{ .Values.config.argoToken }}"
            - name: ARGO_EXTRA_ENVS
              value: '[{{ join "," .Values.config.argoExtraEnvs }}]'
            - name: ARGO_INGESTION_IMAGE
              value: "{{ .Values.config.ingestionImage }}"
            - name: AUTH_TOKEN
              value: "{{ .Values.config.authToken }}"
            - name: SERVER_URL
              value: "{{ .Values.config.serverUrl }}"
            - name: RECONNECT_DELAY_SECONDS
              value: "{{ .Values.config.reconnectDelaySeconds }}"
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
