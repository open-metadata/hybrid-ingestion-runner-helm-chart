---
replicaCount: 1

image:
  repository: ""
  tag: ""
  pullPolicy: IfNotPresent

# Image Pull Secrets https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
imagePullSecrets:
  - name: ""

service:
  port: 8585

config:
  agentId: ""                                    # Agent identifier that will be assigned to an ingestion pipeline
  authToken: ""                                  # The token used to authenticate with the Collate server
  serverUrl: "wss://my-cluster.getcollate.io"  # The URL of the Collate server
  reconnectDelaySeconds: "5"                     # The delay between reconnection attempts
  # The following section applies for Argo Workflows configuration
  ingestionPods:
    # Ingestion Pods' namespace default value is the Helm Chart namespace
    # namespace: "{{ include \"hybrid-ingestion-agent.namespace\" . }}"
    baseImage: "openmetadata/ingestion-base:1.6.0-SNAPSHOT"
    disableVersionValidation: ""
    # https://argoproj.github.io/argo-workflows/service-accounts/
    serviceAccountName: ""
    customerToleration: ""
    # Image Pull Secrets for the baseImage (comma separated string) https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
    imagePullSecrets: ""
    # If `false`, we will disable the Service Account automount and pass it by hand (argo workflows internally will handle this)
    autoMountSAToken: ""
    # Resources configuration
    resources:
      limits:
        cpu: "1000m"
        memory: "4096Mi"
      requests:
        cpu: "200m"
        memory: "256Mi"
    # Automation Workflow Resources configuration
    automationResources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "200m"
        memory: "256Mi"
    # Pass any extra environment variables to the running pods, as `[key1:value1,key2:value2,...]`
    extraEnvs: []
  argoWorkflows:
    # The endpoint (host:port) of the Argo Workflows server
    endpoint: ""
    # The token used to authenticate with the Argo Workflows server, e.g., eyJhbGciOiJSUzI1NiIsImtpZCI6IjlyQTZ4S3...
    argoToken: ""
    # backoff retry time in seconds to test the connection
    backOffTime: ""
    # SSL to connect to the Argo Server
    certificatePath: ""
    # Delete the workflows after #seconds. By default, we'll keep workflows for 1 week
    secondsAfterCompletionTTL: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  automount: true

# Service monitor for Prometheus metrics
serviceMonitor:
  enabled: false
  interval: 30s
  annotations: {}
  labels: {}
