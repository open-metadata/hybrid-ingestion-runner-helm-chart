apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hybrid-ingestion-runner.fullname" . }}
  labels:
    {{- include "hybrid-ingestion-runner.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "hybrid-ingestion-runner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hybrid-ingestion-runner.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hybrid-ingestion-runner.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: app
              containerPort: 8585
              protocol: TCP
          env:
            - name: ARGO_WORKFLOW_EXECUTOR_SERVICE_ACCOUNT_NAME
              value: {{ include "hybrid-ingestion-runner.ingestionServiceAccountName" . }}
            {{- with .Values.config }}
            - name: AGENT_ID
              value: "{{ .agentId }}"
            {{- if not .argoWorkflows.enabled }}
            - name: EXECUTOR_TYPE
              value: "simplek8s"
            {{- end }}
            - name: AUTH_TOKEN
            {{- if .authToken }}
              value: "{{ .authToken }}"
            {{- else if .authTokenSecret }}
              valueFrom:
                secretKeyRef:
                  name: "{{ .authTokenSecret.name }}"
                  key: "{{ .authTokenSecret.key }}"
            {{- end }}
            - name: SERVER_URL
              value: "{{ .serverUrl }}"
            - name: SERVER_HOST_API_URL
              value: "{{ .serverHostApiUrl }}"
            {{- with .secretsManager }}
            - name: SECRETS_MANAGER
              value: "{{ . }}"
            {{- end }}
            {{- with .reconnectDelaySeconds }}
            - name: RECONNECT_DELAY_SECONDS
              value: "{{ . }}"
            {{- end }}
            {{- with .ingestionPods }}
            {{- if $.Values.config.argoWorkflows.enabled }}
            - name: ARGO_NAMESPACE
            {{- else }}
            - name: SIMPLEK8S_NAMESPACE
              value: {{ .namespace | default (include "hybrid-ingestion-runner.namespace" $) }}
            {{- end }}
            - name: ARGO_INGESTION_IMAGE
              value: "{{ .repository }}:{{ .tag }}"
            {{- if .disableVersionValidation }}
            - name: ARGO_DISABLE_VERSION_VALIDATION
              value: "{{ .disableVersionValidation }}"
            {{- end }}
            {{- with .customerToleration }}
            - name: ARGO_WORKFLOW_CUSTOMER_TOLERATION
              value: "{{ . }}"
            {{- end }}
            {{- with .imagePullSecrets }}
            - name: ARGO_IMAGE_PULL_SECRETS
              value: "{{ . }}"
            {{- end }}
            {{- with .automountSAToken }}
            - name: ARGO_AUTOMOUNT_SA_TOKEN
              value: "{{ . }}"
            {{- end }}
            {{- with .extraEnvs }}
            - name: ARGO_EXTRA_ENVS
              value: '[{{ join "," . }}]'
            {{- end }}
            {{- with .resources.limits }}
            {{- with .cpu }}
            - name: ARGO_WORKFLOW_CPU_LIMIT
              value: "{{ . }}"
            {{- end }}
            {{- with .memory }}
            - name: ARGO_WORKFLOW_MEMORY_LIMIT
              value: "{{ . }}"
            {{- end }}
            {{- end }}
            {{- with .resources.requests }}
            {{- with .cpu }}
            - name: ARGO_WORKFLOW_CPU_REQUEST
              value: "{{ . }}"
            {{- end }}
            {{- with .memory }}
            - name: ARGO_WORKFLOW_MEMORY_REQUEST
              value: "{{ . }}"
            {{- end }}
            {{- end }}
            {{- with .automationResources.limits }}
            {{- with .cpu }}
            - name: ARGO_AUTOMATION_WORKFLOW_CPU_LIMIT
              value: "{{ . }}"
            {{- end }}
            {{- with .memory }}
            - name: ARGO_AUTOMATION_WORKFLOW_MEMORY_LIMIT
              value: "{{ . }}"
            {{- end }}
            {{- end }}
            {{- with .automationResources.requests }}
            {{- with .cpu }}
            - name: ARGO_AUTOMATION_WORKFLOW_CPU_REQUEST
              value: "{{ . }}"
            {{- end }}
            {{- with .memory }}
            - name: ARGO_AUTOMATION_WORKFLOW_MEMORY_REQUEST
              value: "{{ . }}"
            {{- end }}
            {{- end }}
            {{- end }}
            {{- with .argoWorkflows }}
            - name: PIPELINE_SERVICE_CLIENT_ENDPOINT
              value: "{{ .endpoint }}"
            - name: ARGO_TOKEN
              valueFrom:
                secretKeyRef:
                  name: argowf-client-token
                  key: token
            {{- with .secondsAfterCompletionTTL }}
            - name: ARGO_SECONDS_AFTER_COMPLETION_TTL
              value: "{{ . }}"
            {{- end }}
            {{- with .certificatePath }}
            - name: ARGO_SERVER_CERTIFICATE_PATH
              value: "{{ . }}" 
            {{- end}}
            {{- with .backoffTime }}
            - name: ARGO_TEST_CONNECTION_BACKOFF_TIME
              value: "{{ . }}"
            {{- end }}
            {{- end }}
            {{- end }}
            {{- with .Values.extraEnvs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
